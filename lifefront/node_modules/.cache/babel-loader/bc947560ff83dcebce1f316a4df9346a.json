{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusia\\\\Desktop\\\\Java\\\\Life\\\\lifefront\\\\src\\\\service\\\\ProtectedRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router';\nimport AuthenticationService from \"./AuthenticationService\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => AuthenticationService.isUserLoggedIn() ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/kusia/Desktop/Java/Life/lifefront/src/service/ProtectedRoute.js"],"names":["React","Component","Route","Redirect","AuthenticationService","PrivateRoute","component","rest","props","isUserLoggedIn","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAGM;AAA3B,CAAD,KACjB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IACvBJ,qBAAqB,CAACK,cAAtB,KACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,GAEI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACdE,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAb;AAFO,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAUA,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router'\r\nimport AuthenticationService from \"./AuthenticationService\"\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      AuthenticationService.isUserLoggedIn()\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n          pathname: '/login',\r\n          state: {from: props.location}\r\n        }} />\r\n    )} />\r\n  )\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}