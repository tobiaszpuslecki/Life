{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusia\\\\Desktop\\\\Java\\\\Life\\\\lifefront\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport \"./login.css\";\nimport AuthenticationService from \"../../service/AuthenticationService\";\nimport { Redirect } from 'react-router';\nimport { withGlobalState } from 'react-globally';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      showSuccessMessage: false,\n      hasLoginFailed: false\n    };\n\n    this.onChangeUser = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangePassword = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      this.login(this.state.username, this.state.password);\n    };\n\n    this.login = (username, password) => {\n      AuthenticationService.executeJwtAuthenticationService(username, password).then(response => {\n        AuthenticationService.registerSuccessfulLoginForJwt(username, response.headers.authorization);\n        this.props.setGlobalState(() => ({\n          logged: true\n        }));\n      }).catch(() => {\n        alert('The username or password is incorrect');\n      });\n    };\n  }\n\n  render() {\n    const {\n      from\n    } = this.props.location.state || {\n      from: {\n        pathname: '/'\n      }\n    };\n\n    if (this.props.globalState.logged) {\n      return React.createElement(Redirect, {\n        to: '/home',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"loginContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Life\"), React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Login\",\n      onChange: this.onChangeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      onChange: this.onChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"Log in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withGlobalState(Login);","map":{"version":3,"sources":["C:/Users/kusia/Desktop/Java/Life/lifefront/src/components/Login/Login.js"],"names":["React","Component","AuthenticationService","Redirect","withGlobalState","Login","state","username","password","showSuccessMessage","hasLoginFailed","onChangeUser","e","setState","target","name","value","onChangePassword","submit","preventDefault","login","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","headers","authorization","props","setGlobalState","logged","catch","alert","render","from","location","pathname","globalState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./login.css\"\r\nimport AuthenticationService from \"../../service/AuthenticationService\"\r\nimport { Redirect } from 'react-router'\r\nimport {withGlobalState} from 'react-globally'\r\nclass Login extends Component {\r\n    state={\r\n        username: '',\r\n        password: '',\r\n        showSuccessMessage: false,\r\n        hasLoginFailed: false\r\n    }\r\n    onChangeUser = (e)=>{\r\n        this.setState({\r\n          [e.target.name] : e.target.value\r\n        })\r\n      }\r\n      onChangePassword = (e)=>{\r\n        this.setState({\r\n          [e.target.name] : e.target.value\r\n        })\r\n      }\r\n      submit = (e) =>{\r\n        e.preventDefault();\r\n        this.login(this.state.username,this.state.password);\r\n      }\r\n      login = (username,password) =>{\r\n        \r\n        AuthenticationService\r\n        .executeJwtAuthenticationService(username, password)\r\n        .then((response) => {\r\n          AuthenticationService.registerSuccessfulLoginForJwt(username, response.headers.authorization)\r\n          this.props.setGlobalState(() =>({\r\n            logged:true\r\n        }))\r\n        }).catch(() => {\r\n          alert('The username or password is incorrect')\r\n        })\r\n      }\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n        if(this.props.globalState.logged){\r\n            return <Redirect to={'/home'}/>\r\n        }\r\n        return (\r\n            <div className='loginContainer'>\r\n                <h1>Life</h1>\r\n                <form  onSubmit={this.submit}>\r\n                    <input type=\"text\" name = \"username\" placeholder=\"Login\" onChange={this.onChangeUser} />\r\n                    <input type=\"password\" name = \"password\" placeholder=\"password\" onChange={this.onChangePassword} />\r\n                    <input className='btn' type=\"submit\" value=\"Log in\" />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withGlobalState(Login)"]},"metadata":{},"sourceType":"module"}