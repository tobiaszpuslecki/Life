{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusia\\\\Desktop\\\\Java\\\\Life\\\\lifefront\\\\src\\\\components\\\\home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport AuthenticationService from '../../service/AuthenticationService';\nimport { withGlobalState } from 'react-globally';\nimport { Redirect } from 'react-router';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quest: {}\n    };\n\n    this.test = () => {\n      axios.get(\"http://localhost:8080/quests/1\").then(response => this.setState({\n        quest: response.data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    axios.get(\"http://localhost:8080/quests/1\").then(response => this.setState({\n      quest: response.data\n    }));\n  }\n\n  render() {\n    if (!this.props.globalState.logged) {\n      return React.createElement(Redirect, {\n        to: \"/login \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.quest.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Description: \", this.state.quest.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Points: \", this.state.quest.points));\n  }\n\n}\n\nexport default withGlobalState(Home);","map":{"version":3,"sources":["C:/Users/kusia/Desktop/Java/Life/lifefront/src/components/home/Home.js"],"names":["React","Component","axios","AuthenticationService","withGlobalState","Redirect","Home","state","quest","test","get","then","response","setState","data","componentDidMount","setupAxiosInterceptors","render","props","globalState","logged","name","description","points"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AACA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACnB;AACFC,MAAAA,KAAK,EAAE;AADL,KADmB;;AAAA,SAYzBC,IAZyB,GAYlB,MAAK;AACRP,MAAAA,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAQ,IACX,KAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAACI,QAAQ,CAACE;AAAhB,OAAd,CAFJ;AAKH,KAlBwB;AAAA;;AAIzBC,EAAAA,iBAAiB,GAAE;AACnBZ,IAAAA,qBAAqB,CAACa,sBAAtB;AACEd,IAAAA,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAQ,IACX,KAAKC,QAAL,CAAc;AAACL,MAAAA,KAAK,EAACI,QAAQ,CAACE;AAAhB,KAAd,CAFJ;AAKD;;AAQDG,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAA3B,EAAkC;AAC9B,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,IADtB,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,WADnC,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,KAAKf,KAAL,CAAWC,KAAX,CAAiBe,MAD9B,CAPJ,CADJ;AAaH;;AApCwB;;AAsC7B,eAAenB,eAAe,CAACE,IAAD,CAA9B","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport AuthenticationService from '../../service/AuthenticationService'\r\nimport {withGlobalState} from 'react-globally'\r\nimport { Redirect } from 'react-router'\r\nclass Home extends Component {\r\n    state={\r\n        quest: {}\r\n    }\r\n    componentDidMount(){\r\n    AuthenticationService.setupAxiosInterceptors();\r\n      axios.get(\"http://localhost:8080/quests/1\")\r\n      .then( response => (\r\n          this.setState({quest:response.data})\r\n      ) \r\n      )\r\n    }\r\n    test = () =>{\r\n        axios.get(\"http://localhost:8080/quests/1\")\r\n        .then( response => (\r\n            this.setState({quest:response.data})\r\n        ) \r\n        )\r\n    }\r\n    render() {\r\n        if(!this.props.globalState.logged){\r\n            return <Redirect to='/login '/>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    {this.state.quest.name}\r\n                </h2>\r\n                <p>\r\n                    Description: {this.state.quest.description}\r\n                </p>\r\n                <p>\r\n                    Points: {this.state.quest.points}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withGlobalState(Home)"]},"metadata":{},"sourceType":"module"}